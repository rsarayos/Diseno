/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.consultarmedico.Presentacion;

import com.mycompany.consultarmedicodto.DTOS.MedicoDTO;
import com.mycompany.consultarmedicosubsistemas.BuscarMedico.FachadaBuscarMedico;
import com.mycompany.consultarmedicosubsistemas.BuscarMedico.IBuscarMedico;
import com.mycompany.consultarmedicosubsistemas.ConsultarMedico.FachadaConsultarMedico;
import com.mycompany.consultarmedicosubsistemas.ConsultarMedico.IConsultarMedico;
import com.mycompany.consultarmedicosubsistemas.EliminarMedico.FachadaEliminarMedico;
import com.mycompany.consultarmedicosubsistemas.EliminarMedico.IEliminarMedico;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author uirtis
 */
public class FrmConsultarMedicos extends javax.swing.JFrame {

    private IConsultarMedico consultarMedico;
    private IBuscarMedico buscarMedico;
    private IEliminarMedico eliminarMedico;

    /**
     * Creates new form FrmConsultarMedicos
     */
    public FrmConsultarMedicos() {
        initComponents();
        this.consultarMedico = new FachadaConsultarMedico();
        this.buscarMedico = new FachadaBuscarMedico();
        this.eliminarMedico = new FachadaEliminarMedico();
        accionesTabla(consultarMedico.consultarMedico());
    }
    /**
     * Metodo para establecer los datos de la tabla y configuraciones
     * 
     * @param medicos Lista de medicos
     */
    public void accionesTabla(List<MedicoDTO> medicos) {
        String[] columnas = {"Nombre", "Cedula", "Especialidad"};
        DefaultTableModel model = new DefaultTableModel(columnas, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;  // Esto hará que ninguna celda sea editable
            }
        };

        // Añadir hasta cinco citas al modelo de la tabla
        for (MedicoDTO medicoDTO : medicos) {
            // Verificar si el estado de la cita es true
            // Detener después de añadir cinco citas
            Object[] fila = {
                medicoDTO.getNombre() + " " + medicoDTO.getApellidoPaterno() + " " + medicoDTO.getApellidoMaterno(),
                medicoDTO.getCedula(), medicoDTO.getEspecialidad()
            };
            model.addRow(fila);

        }
        tablaMedicos.setModel(model);
    }

    /**
     * Metodo encargado de actualizar la tabla según los filtros seleccionados
     */
    private void cargarTablaDinamica() {
        String nombre = null;
        String cedula = null;
        String especialidad = null;

        if (!txtBusquedaNombre.getText().isBlank()) {
            nombre = txtBusquedaNombre.getText();
        }
        if (!txtBusquedaCedula.getText().isBlank()) {
            cedula = txtBusquedaCedula.getText();
        }
        if (!txtBusquedaEspecialidad.getText().isBlank()) {
            especialidad = txtBusquedaEspecialidad.getText();
        }
        if (nombre == null && cedula == null && especialidad == null) {
            accionesTabla(consultarMedico.consultarMedico());
            return;
        }
        accionesTabla(buscarMedico.buscarMedico(nombre, cedula, especialidad));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        label1 = new java.awt.Label();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaMedicos = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtBusquedaNombre = new javax.swing.JTextField();
        txtBusquedaCedula = new javax.swing.JTextField();
        txtBusquedaEspecialidad = new javax.swing.JTextField();
        btnEliminarMedico = new javax.swing.JButton();
        btnRegresar = new javax.swing.JButton();
        rbtnNombre = new javax.swing.JRadioButton();
        rbtnCedula = new javax.swing.JRadioButton();
        rbtnEspecialidad = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        label1.setAlignment(java.awt.Label.CENTER);
        label1.setBackground(new java.awt.Color(0, 204, 204));
        label1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        label1.setFont(new java.awt.Font("Segoe UI Variable", 1, 36)); // NOI18N
        label1.setForeground(new java.awt.Color(255, 255, 255));
        label1.setText("Consultar Medicos");

        tablaMedicos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nombre Medico", "Cédula", "Especialidad"
            }
        ));
        tablaMedicos.setName("name\n"); // NOI18N
        jScrollPane2.setViewportView(tablaMedicos);

        jLabel1.setText("Filtro");

        txtBusquedaNombre.setEditable(false);
        txtBusquedaNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBusquedaNombreKeyReleased(evt);
            }
        });

        txtBusquedaCedula.setEditable(false);
        txtBusquedaCedula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBusquedaCedulaKeyReleased(evt);
            }
        });

        txtBusquedaEspecialidad.setEditable(false);
        txtBusquedaEspecialidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBusquedaEspecialidadKeyReleased(evt);
            }
        });

        btnEliminarMedico.setText("Eliminar Medico");
        btnEliminarMedico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarMedicoActionPerformed(evt);
            }
        });

        btnRegresar.setText("Regresar");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        rbtnNombre.setText("Nombre");
        rbtnNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnNombreActionPerformed(evt);
            }
        });

        rbtnCedula.setText("Cédula");
        rbtnCedula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnCedulaActionPerformed(evt);
            }
        });

        rbtnEspecialidad.setText("Especialidad");
        rbtnEspecialidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnEspecialidadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(label1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtBusquedaNombre)
                            .addComponent(txtBusquedaCedula)
                            .addComponent(txtBusquedaEspecialidad))
                        .addGap(18, 18, 18))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(69, 69, 69)
                                .addComponent(rbtnCedula))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(63, 63, 63)
                                .addComponent(rbtnEspecialidad)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(rbtnNombre))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(86, 86, 86)
                                .addComponent(jLabel1)
                                .addGap(0, 20, Short.MAX_VALUE)))
                        .addGap(89, 89, 89)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnEliminarMedico)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnRegresar))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel1)
                        .addGap(27, 27, 27)
                        .addComponent(rbtnNombre)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtBusquedaNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19)
                        .addComponent(rbtnCedula)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtBusquedaCedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19)
                        .addComponent(rbtnEspecialidad)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtBusquedaEspecialidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEliminarMedico)
                    .addComponent(btnRegresar))
                .addGap(0, 54, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEliminarMedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarMedicoActionPerformed
        // TODO add your handling code here:
        int filaSeleccionada = tablaMedicos.getSelectedRow();
        MedicoDTO medicoDTO = new MedicoDTO();

        if (filaSeleccionada != -1) {
            medicoDTO.setCedula((String) tablaMedicos.getValueAt(filaSeleccionada, 1));
            int respuesta = JOptionPane.showOptionDialog(null, "¿Desea eliminar al medico?", "Eliminacion Medico", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, new String[]{"Si", "No"}, "Sí");

            if (respuesta == JOptionPane.YES_OPTION) {
                MedicoDTO medico = eliminarMedico.eliminarMedico(medicoDTO);
                if (medico != null) {
                    JOptionPane.showMessageDialog(null, "Se ha eliminado el medico.");
                }else{
                    JOptionPane.showMessageDialog(null, "No se ha podido eliminar al medico.");
                }
            } 
        } else {
            JOptionPane.showMessageDialog(null, "No se ha seleccionado un medico.");
        }

    }//GEN-LAST:event_btnEliminarMedicoActionPerformed

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        // TODO add your handling code here:
        FrmAdministradorMenu administradorMenu = new FrmAdministradorMenu();
        administradorMenu.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void rbtnNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnNombreActionPerformed
        // TODO add your handling code here:
        txtBusquedaNombre.setEditable(rbtnNombre.isSelected());
        if (!rbtnNombre.isSelected()) {
            txtBusquedaNombre.setText("");
        }
        cargarTablaDinamica();
    }//GEN-LAST:event_rbtnNombreActionPerformed

    private void rbtnCedulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnCedulaActionPerformed
        // TODO add your handling code here:
        txtBusquedaCedula.setEditable(rbtnCedula.isSelected());
        if (!rbtnCedula.isSelected()) {
            txtBusquedaCedula.setText("");
        }
        cargarTablaDinamica();
    }//GEN-LAST:event_rbtnCedulaActionPerformed

    private void rbtnEspecialidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnEspecialidadActionPerformed
        // TODO add your handling code here:
        txtBusquedaEspecialidad.setEditable(rbtnEspecialidad.isSelected());
        if (!rbtnEspecialidad.isSelected()) {
            txtBusquedaEspecialidad.setText("");
        }
        cargarTablaDinamica();
    }//GEN-LAST:event_rbtnEspecialidadActionPerformed

    private void txtBusquedaNombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBusquedaNombreKeyReleased
        cargarTablaDinamica();
    }//GEN-LAST:event_txtBusquedaNombreKeyReleased

    private void txtBusquedaCedulaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBusquedaCedulaKeyReleased
        // TODO add your handling code here:
        cargarTablaDinamica();
    }//GEN-LAST:event_txtBusquedaCedulaKeyReleased

    private void txtBusquedaEspecialidadKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBusquedaEspecialidadKeyReleased
        // TODO add your handling code here:
        cargarTablaDinamica();
    }//GEN-LAST:event_txtBusquedaEspecialidadKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEliminarMedico;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private java.awt.Label label1;
    private javax.swing.JRadioButton rbtnCedula;
    private javax.swing.JRadioButton rbtnEspecialidad;
    private javax.swing.JRadioButton rbtnNombre;
    private javax.swing.JTable tablaMedicos;
    private javax.swing.JTextField txtBusquedaCedula;
    private javax.swing.JTextField txtBusquedaEspecialidad;
    private javax.swing.JTextField txtBusquedaNombre;
    // End of variables declaration//GEN-END:variables
}
